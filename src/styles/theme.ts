//! Generated from @lemme/tailwind-config/styles.css @theme variables
//! So, do not edit this file manually, instead edit @theme variables, and use: pnpm run script:gen-theme-util

const theme = {
  font: {
    inter: 'var(--font-inter-sans-next)',
  },
  breakpoints: {
    xs: '480px',
    sm: '640px',
    md: '768px',
    lg: '976px',
    xl: '1024px',
    '2xl': '1280px',
    '3xl': '1536px',
  },
  colors: {
    primary: {
      '500': '#ac9b79',
    },
    highlight: {
      '500': '#3076d8',
    },
    neutral: {
      '50': '#fdfbf7',
      '100': '#f8f6f2',
      '150': '#f6f3f0',
      '200': '#fafeff',
      '900': '#0a0d14',
    },
    danger: {
      '500': '#ea4335',
    },
  },
  custom: {
    'text-xs': '0.75rem',
    'text-xs--line-height': '1.5',
    'text-xs--letter-spacing': '-0.02rem',
    'text-sm': '0.875rem',
    'text-sm--line-height': '1.5',
    'text-sm--letter-spacing': '0rem',
    'text-base': '1rem',
    'text-base--line-height': '1.5',
    'text-base--letter-spacing': '0rem',
    'text-lg': '1.25rem',
    'text-lg--line-height': '1.5',
    'text-lg--letter-spacing': '-0.02rem',
    'text-xl': '1.5rem',
    'text-xl--line-height': '1.5',
    'text-xl--letter-spacing': '0rem',
    'text-2xl': '1.75rem',
    'text-2xl--line-height': '1.5',
    'text-2xl--letter-spacing': '0rem',
    'text-3xl': '2rem',
    'text-3xl--line-height': '1.5',
    'text-3xl--letter-spacing': '-0.02rem',
    'animate-fade-in-slide-up': 'fade-in-slide-up 0.5s ease-out forwards',
    'animate-fade-in': 'fade-in 0.3s ease-in forwards',
    'animate-fade-out': 'fade-out 0.3s ease-out forwards',
  },
};

type Theme = typeof theme;
type Font = keyof typeof theme.font;
type Breakpoint = keyof typeof theme.breakpoints;

type StringKey<T> = Extract<keyof T, string>;
type StringOrNumberKey<T> = Extract<keyof T, string | number>;

type ColorGroup = StringKey<typeof theme.colors>;
type ColorGroupShade = {
  [K in StringKey<typeof theme.colors>]: {
    [S in StringOrNumberKey<(typeof theme.colors)[K]>]: `${K}-${S}`;
  }[StringOrNumberKey<(typeof theme.colors)[K]>];
}[StringKey<typeof theme.colors>];

function getColorValue(color: ColorGroupShade): string {
  const [group, shade] = color.split('-') as [ColorGroup, string];

  return theme.colors[group][
    shade as keyof (typeof theme.colors)[typeof group]
  ];
}

export {
  getColorValue,
  theme,
  type Breakpoint,
  type ColorGroup,
  type ColorGroupShade,
  type Font,
  type Theme,
};
